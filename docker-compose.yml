version: "3.8"

services:
  mssql:
    image: 'mcr.microsoft.com/mssql/server'
    ports:
        - '1433:1433'
    environment:
        - ACCEPT_EULA=Y
        - SA_PASSWORD=Secret1234
    volumes:
        - './drive:/var/opt/mssql'
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Secret1234 -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: 'mcr.microsoft.com/mssql/server'
    volumes:
      - ./init-ms.sql:/docker-entrypoint-initdb.d/init-ms.sql
    depends_on:
      mssql:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P Secret1234 -d dockerdb -i docker-entrypoint-initdb.d/init-ms.sql;
      echo "All done!";
      '

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3,secretsmanager
    volumes:
      - ./config/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
      - "/var/run/docker.sock:/var/run/docker.sock"

  api:
    container_name: demo
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      - localstack
      - mssql
    environment:
      AWS_ACCESSKEY: test
      AWS_SECRETKEY: test
      AWS_SERVICEENDPOINT: http://localstack:4566
      AWS_REGION: ap-southeast-1
      CONFIG_ENVIRONMENT: local
      AWS_S3_BUCKETNAME: mybucket
      AWS_S3_FILENAME: test.txt
      AWS_SECRETSMANAGER_SECRETID: MyTestSecret
      SPRING_DATASOURCE_URL: jdbc:sqlserver://mssql:1433;encrypt=true;trustServerCertificate=true;databaseName=dockerdb
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: Secret1234
      SPRING_PROFILE_ACTIVE: local
    ports:
      - 8080:8080

